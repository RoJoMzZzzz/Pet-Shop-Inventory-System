/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package petshopsystem;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Andrade
 */
public class Inventory extends javax.swing.JFrame {
    Connection conn = new DBConnection().connect();
    
    /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents();
        update_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbInventory = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfClass = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfBreed = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfDesc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfUnit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jtfPrice = new javax.swing.JTextField();
        jbtnClear = new javax.swing.JButton();
        jbtnBack = new javax.swing.JButton();
        jspQty = new javax.swing.JSpinner();
        jbtnAdd = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("INVENTORY");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Search: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 20, -1, -1));

        jtfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchActionPerformed(evt);
            }
        });
        jtfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchKeyReleased(evt);
            }
        });
        getContentPane().add(jtfSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 17, 91, -1));

        jtbInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbInventory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbInventoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbInventory);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 43, 570, 155));

        jLabel3.setText("ID:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 219, -1, -1));

        jtfID.setEditable(false);
        jtfID.setEnabled(false);
        getContentPane().add(jtfID, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 216, 79, -1));

        jLabel4.setText("Class:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 245, -1, -1));
        getContentPane().add(jtfClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 242, 79, -1));

        jLabel5.setText("Breed:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 271, -1, -1));
        getContentPane().add(jtfBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(99, 268, 79, -1));

        jLabel6.setText("Description: ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 297, -1, -1));
        getContentPane().add(jtfDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 297, 78, -1));

        jLabel7.setText("Qty.");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 220, -1, -1));

        jLabel8.setText("Unit:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 245, -1, -1));
        getContentPane().add(jtfUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 242, 78, -1));

        jLabel9.setText("Price:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 277, -1, -1));
        getContentPane().add(jtfPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 274, 75, -1));

        jbtnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/clear.png"))); // NOI18N
        jbtnClear.setBorderPainted(false);
        jbtnClear.setContentAreaFilled(false);
        jbtnClear.setFocusPainted(false);
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 90, 40));

        jbtnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/backtoadminmenu.png"))); // NOI18N
        jbtnBack.setBorderPainted(false);
        jbtnBack.setContentAreaFilled(false);
        jbtnBack.setFocusPainted(false);
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 320, 310, 40));
        getContentPane().add(jspQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 217, 78, -1));

        jbtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/add.png"))); // NOI18N
        jbtnAdd.setBorderPainted(false);
        jbtnAdd.setContentAreaFilled(false);
        jbtnAdd.setFocusPainted(false);
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 80, 40));

        jbtnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/delete.png"))); // NOI18N
        jbtnDelete.setBorderPainted(false);
        jbtnDelete.setContentAreaFilled(false);
        jbtnDelete.setFocusPainted(false);
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 260, 100, 40));

        jbtnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/update.png"))); // NOI18N
        jbtnUpdate.setBorderPainted(false);
        jbtnUpdate.setContentAreaFilled(false);
        jbtnUpdate.setFocusPainted(false);
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 110, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petshopsystem/elze/bgbg.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void clearText(){
        jtfID.setText("");
        jtfClass.setText("");
        jtfBreed.setText("");
        jtfDesc.setText("");
        jspQty.setValue(0);
        jtfUnit.setText("");
        jtfPrice.setText("");
    }
   
    private void update_table() {
        String sql = "select * from itemtb";
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            
            ResultSet rs = ps.executeQuery();
            jtbInventory.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        
        if((jtfClass.getText().equals(""))||(jtfBreed.getText().equals(""))||(jtfDesc.getText().equals(""))||
                (jspQty.getValue().equals(0))||(jtfUnit.getText().equals(""))||(jtfPrice.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "Please Complete All of the Fields");
        }
        else {
        String sql = "Insert into itemtb (Class,Breed,Description,Quantity,Unit,Price)values (?,?,?,?,?,?)";
        
        try {
            
            PreparedStatement ps = conn.prepareStatement(sql);
            //ps.setString(1, jtfID.getText());
            //ps.setString(1, jtfID.getText());
            ps.setString(1, jtfClass.getText());
            //String str_usertype = jcbUsertype.getSelectedItem().toString();
            ps.setString(2, jtfBreed.getText());
            ps.setString(3, jtfDesc.getText());
            ps.setString(4, jspQty.getValue().toString());
            ps.setString(5, jtfUnit.getText());
            ps.setString(6, jtfPrice.getText());
            ps.execute();
            
            update_table();
        
            JOptionPane.showMessageDialog(null, "Saved");
            clearText();
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        //DefaultTableModel model = (DefaultTableModel) jtbInventory.getModel();
        if((jtfClass.getText().equals(""))||(jtfBreed.getText().equals(""))||(jtfDesc.getText().equals(""))||
                (jspQty.getValue().equals(0))||(jtfUnit.getText().equals(""))||(jtfPrice.getText().equals(""))){
            JOptionPane.showMessageDialog(null, "Please Complete All of the Fields");
        }
        
        else if(jtbInventory.getSelectedRow()==-1){
            if(jtbInventory.getRowCount()==0){
                JOptionPane.showMessageDialog(null, "Table is Empty");
            }else
                JOptionPane.showMessageDialog(null, "You must Select a Product");
        }
        else{
        try {
            
            String sql="UPDATE itemtb SET Class='"+jtfClass.getText()+"', Breed='"+jtfBreed.getText()+"', Description='"+jtfDesc.getText()+"', Quantity='"+jspQty.getValue().toString()+"', Unit='"+jtfUnit.getText()+"', Price='"+jtfPrice.getText()+"' WHERE Description='"+jtfDesc.getText()+"'; ";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps = conn.prepareStatement(sql);
            ps.execute();
            
            JOptionPane.showMessageDialog(null, "Updated");
            DefaultTableModel model = (DefaultTableModel) jtbInventory.getModel();
            model.setValueAt(jtfID.getText(), jtbInventory.getSelectedRow(), 0);
            model.setValueAt(jtfClass.getText(), jtbInventory.getSelectedRow(), 1);
            model.setValueAt(jtfBreed.getText(), jtbInventory.getSelectedRow(), 2);
            model.setValueAt(jtfDesc.getText(), jtbInventory.getSelectedRow(), 3);
            model.setValueAt(jspQty.getValue().toString(), jtbInventory.getSelectedRow(), 4);
            model.setValueAt(jtfUnit.getText(), jtbInventory.getSelectedRow(), 5);
            model.setValueAt(jtfPrice.getText(), jtbInventory.getSelectedRow(), 6);
            
            clearText();
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
        clearText();
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        clearText();
    }//GEN-LAST:event_jbtnClearActionPerformed

    private void jtbInventoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbInventoryMouseClicked
        DefaultTableModel model = (DefaultTableModel) jtbInventory.getModel();
        jtfID.setText(model.getValueAt(jtbInventory.getSelectedRow(), 0).toString());
        jtfClass.setText(model.getValueAt(jtbInventory.getSelectedRow(), 1).toString());
        jtfBreed.setText(model.getValueAt(jtbInventory.getSelectedRow(), 2).toString());
        jtfDesc.setText(model.getValueAt(jtbInventory.getSelectedRow(), 3).toString());
        
        //String qty = jspQty.getValue().toString();
        jspQty.setValue(model.getValueAt(jtbInventory.getSelectedRow(), 4));
        jtfUnit.setText(model.getValueAt(jtbInventory.getSelectedRow(), 5).toString());
        jtfPrice.setText(model.getValueAt(jtbInventory.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_jtbInventoryMouseClicked

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtbInventory.getModel();
        if(jtbInventory.getSelectedRow()==-1){
            if(jtbInventory.getRowCount()==0){
                JOptionPane.showMessageDialog(null, "Table is Empty");
            }else
                JOptionPane.showMessageDialog(null, "You must Select a Product");
        }
        else{
            try {
                
            String sql ="Delete from itemtb where item_id='"+jtfID.getText()+"';";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps=conn.prepareStatement(sql);
            ps.execute();
            model.removeRow(jtbInventory.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Deleted");
            clearText();
        }
        catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(null, e);
        }
            
    }
        clearText();
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
       this.dispose();
       new AdminMenu().setVisible(true);
    }//GEN-LAST:event_jbtnBackActionPerformed

    private void jtfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchActionPerformed
        
    }//GEN-LAST:event_jtfSearchActionPerformed

    private void jtfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchKeyReleased
        //update_table();
        DefaultTableModel model = (DefaultTableModel) jtbInventory.getModel();
        TableRowSorter<TableModel>sorter=new TableRowSorter<TableModel>(model);
        jtbInventory.setRowSorter(sorter);
        
        String text = jtfSearch.getText();
        if(text.length()==0){
            sorter.setRowFilter(null);
        }
        else{
            sorter.setRowFilter(RowFilter.regexFilter(text));
        }
    }//GEN-LAST:event_jtfSearchKeyReleased

    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JSpinner jspQty;
    private javax.swing.JTable jtbInventory;
    private javax.swing.JTextField jtfBreed;
    private javax.swing.JTextField jtfClass;
    private javax.swing.JTextField jtfDesc;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfPrice;
    private javax.swing.JTextField jtfSearch;
    private javax.swing.JTextField jtfUnit;
    // End of variables declaration//GEN-END:variables
}